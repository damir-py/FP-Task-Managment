name: Django CI/CD

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1
        ports:
          - 8044:8044
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup database
      run: |
        python manage.py makemigrations
        python manage.py migrate
      env:
        DATABASE_URL: postgres://myuser:mypassword@localhost:8044/mydatabase

    - name: Run tests
      run: |
        python manage.py test
      env:
        DATABASE_URL: postgres://myuser:mypassword@localhost:5432/mydatabase

  deploy:

    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Deploy to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: your-heroku-app-name
      run: |
        git remote add heroku https://git.heroku.com/$HEROKU_APP_NAME.git
        git push heroku main